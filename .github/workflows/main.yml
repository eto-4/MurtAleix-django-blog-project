name: Generar documentació amb Pydoc

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
    - name: Clonar el repositori
      uses: actions/checkout@v3

    - name: Instal·lar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Instal·lar dependències
      run: pip install -r requirements.txt

    - name: Exportar settings de Django
      run: echo "DJANGO_SETTINGS_MODULE=my_site.settings" >> $GITHUB_ENV

    - name: Generar documentació amb pydoc
      run: |
        mkdir -p docs

        FILES="manage blog/__init__.py blog/admin.py blog/apps.py blog/models.py blog/tests.py blog/urls.py blog/views.py my_site/__init__.py my_site/settings.py my_site/urls.py my_site/wsgi.py my_site/asgi.py"
        
        for f in $FILES; do
          MODULE=${f//\//.}
          MODULE=${MODULE%.py}
          python -m pydoc -w $MODULE || echo "Error amb $MODULE, potser no té docstrings o dona error"
        done

        mv *.html docs/

        echo "<h1>Documentació del projecte</h1><ul>" > docs/index.html
        for f in docs/*.html; do
          [ "$f" != "docs/index.html" ] && echo "<li><a href='$(basename $f)'>$(basename $f)</a></li>" >> docs/index.html
        done
        echo "</ul>" >> docs/index.html

    - name: Fer commit i pujar la documentació
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add docs/
        git commit -m "Actualitzar documentació amb Pydoc" || echo "No hi ha canvis"
        git push
